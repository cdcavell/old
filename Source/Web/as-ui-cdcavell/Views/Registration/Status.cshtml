@using CDCavell.ClassLibrary.Web.Identity.Models
@using IdentityModel
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Linq
@inject IAuthorizationService AuthorizationService
@inject UserManager<ApplicationUser> UserManager

@model as_ui_cdcavell.Models.Registration.StatusModel

@{ 
    string subject = string.Empty;
    ApplicationUser user = null;

    if (User.Identity.IsAuthenticated)
    { 
        subject = User.Claims.Where(x => x.Type == JwtClaimTypes.Subject).Select(x => x.Value).FirstOrDefault();
        user = await UserManager.FindByIdAsync(subject);
    }

    TempData["Email"] = Model.Email;
}

<h1 class="h2 mb-1">
    Account Information
</h1>

<div class="card shadow-sm pl-0">
    <div class="card-body rounded-top bg-white">
        <div class="row w-100 m-0 p-0">
            <p class="font-small text-muted">
                Registration
            </p>
        </div>
        <div class="row w-100 m-0 p-0">
            <div class="form-group row w-100 m-0 p-0">
                <div class="col-sm-1 col-md-1 p-1">
                    @Html.LabelFor(model => model.Email)
                </div>
                <div class="col-sm-11 col-md-11">
                    @Html.TextBoxFor(model => model.Email, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                </div>
            </div>
            <div class="form-group row w-100 m-0 p-0">
                <div class="col-sm-auto col-md-auto p-1">
                    @Html.LabelFor(model => model.RequestDate)
                </div>
                <div class="col-sm-5 col-md-5">
                    @Html.TextBoxFor(model => model.RequestDate, "{0:MMM dd, yyyy}", new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                </div>
                <div class="col-sm-1 col-md-1 p-1">
                    @Html.LabelFor(model => model.Status)
                </div>
                <div class="col w-100">
                    @Html.TextBoxFor(model => model.Status, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                </div>
            </div>
            <div class="form-group row w-100 m-0 p-0">
                <div class="col-sm-1 col-md-1 p-1">
                    @Html.LabelFor(model => model.FirstName)
                </div>
                <div class="col-sm-5 col-md-5">
                    @Html.TextBoxFor(model => model.FirstName, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                </div>
                <div class="col-sm-1 col-md-1 p-1">
                    @Html.LabelFor(model => model.LastName)
                </div>
                <div class="col-sm-5 col-md-5">
                    @Html.TextBoxFor(model => model.LastName, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                </div>
            </div>
        </div>
        <div class="row w-100 m-0 p-0">
            <div class="col-sm-6 col-md-6 align-self-start m-0 p-0">
                <div class="row m-0 mb-2 p-0">
                    <div class="col-sm-2 col-md-2 m-0 mt-4 p-0">
                        Gravatar
                    </div>
                    <div class="col-sm-2 col-md-2 ml-2 p-1 pl-2">
                        <a class="text-decoration-none" href="https://en.gravatar.com/" rel="external nofollow noopener" target="_blank">
                            @Html.Gravatar(user.Email, size:65, htmlAttributes:new { @class = "rounded pl-1", alt = "Gravatar" })
                            <h6>
                                <small class="font-x-small text-muted m-0 p-0">
                                        [Update Image]
                                </small>
                            </h6>
                        </a>
                    </div>
                    <div class="col-sm-8 col-md-8 m-0 p-0">
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 align-self-center m-0 p-0">
                @if (!user.IsSysAdmin)
                {
                    <a id="updateAccount"
                        type="button"
                        class="btn btn-dark text-light border shadow-sm text-decoration-none m-3 mr-0 p-1 pr-0 px-2 float-right @(user.IsRevoked ? "disabled" : string.Empty)"
                        asp-action="Update"
                        asp-controller="Registration">
                        <i class="fas fa-user-edit text-grey mt-1 ml-2 pl-1 float-right" aria-hidden="true"></i>
                        Update Account
                    </a>
                }
                @if (Model.TwoFactorEnabled)
                {
                    <a id="twoFactorDisable"
                        type="button"
                        class="btn btn-dark text-light border shadow-sm text-decoration-none m-3 mr-0 p-1 pr-0 px-2 float-right @(user.IsRevoked ? "disabled" : string.Empty)"
                        asp-action="Disable"
                        asp-controller="TwoFactor">
                        Disable Two-Factor Authentication
                        <i class="fas fa-user-times text-grey mt-1 ml-2 pl-1 float-right" aria-hidden="true"></i>
                    </a>
                }
                else
                {
                    <a id="twoFactorDisable"
                        type="button"
                        class="btn btn-dark text-light border shadow-sm text-decoration-none m-3 mr-0 p-1 pr-0 px-2 float-right @(user.IsRevoked ? "disabled" : string.Empty)"
                        asp-action="Enable"
                        asp-controller="TwoFactor">
                        Enable Two-Factor Authentication
                        <i class="fas fa-user-shield text-grey mt-1 ml-2 pl-1 float-right" aria-hidden="true"></i>
                    </a>
                }
            </div>
        </div>
        @if (Model.RoleClaims.Count > 0)
        {
        <div class="row w-100 m-0 p-0">
            <p class="font-small text-muted mb-0 pb-0">Role Claims</p>
        </div>
        <div class="row w-100 m-0 p-0">
            <div class="accordion w-100 m-0 p-0" id="accordionRoleClaims">
            @foreach (AspNetUserRoleClaim roleClaim in Model.RoleClaims)
            {
                <div class="card w-100 m-0 p-0 bg-white border-0">
                    <div class="card-header p-0 m-0 bg-white border-0" id="heading_@roleClaim.Id">
                        <h2 class="p-0 m-0">
                            <button class="btn btn-link btn-block text-decoration-none text-readonly" type="button" data-toggle="collapse" data-target="#collapse_@roleClaim.Id" aria-expanded="true" aria-controls="collapse_@roleClaim.Id">
                                <div class="d-flex flex-row p-0 m-0">
                                    <div class="col-sm-1 col-md-1 p-1 text-right">
                                        @Html.Label("Role","Role", new { @class = "mt-1"})
                                    </div>
                                    <div class="col-sm-3 col-md-3 p-1 text-left">
                                        @Html.TextBox("Role", roleClaim.Role, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                                    </div>
                                    <div class="col-sm-1 col-md-1 p-1 text-right">
                                        @Html.Label("Claim Type","Claim Type", new { @class = "mt-1"})
                                    </div>
                                    <div class="col-sm-3 col-md-3 p-1 text-left">
                                        @Html.TextBox("Claim Type", roleClaim.RoleClaim.ClaimType, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                                    </div>
                                    <div class="col-sm-1 col-md-1 p-1 text-right">
                                        @Html.Label("Status","Status", new { @class = "mt-1"})
                                    </div>
                                    <div class="col-sm-3 col-md-3 p-1 text-left">
                                        @Html.TextBox("Status", roleClaim.Status, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                                    </div>
                                </div>                            
                            </button>
                        </h2>
                    </div>
                    <div id="collapse_@roleClaim.Id" class="collapse p-0 m-0" aria-labelledby="heading_@roleClaim.Id" data-parent="#accordionRoleClaims">
                        <div class="card-body m-1 p-2 border">
                        @foreach(AspNetUserRoleClaimHistory history in roleClaim.History)
                        {
                            <div class="d-flex flex-row p-0 m-0">
                                <div class="col-sm-1 col-md-1 p-1 text-right">
                                    @Html.Label("Date","Date", new { @class = "mt-1"})
                                </div>
                                <div class="col-sm-3 col-md-3 p-1 text-left">
                                    @Html.TextBox("ActionOn",history.ActionOn.ToString("MMM dd, yyyy"), new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                                </div>
                                <div class="col-sm-1 col-md-1 p-1 text-right">
                                    @Html.Label("Action","Action", new { @class = "mt-1"})
                                </div>
                                <div class="col-sm-3 col-md-3 p-1 text-left">
                                    @Html.TextBox("Status",history.Status, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                                </div>
                                <div class="col-sm-1 col-md-1 p-1 text-right">
                                    @Html.Label("ActionBy","Action By", new { @class = "mt-1"})
                                </div>
                                <div class="col-sm-3 col-md-3 p-1 text-left">
                                    @Html.TextBox("ActionBy",history.ActionBy.FullName, new { @readonly = "readonly", @class = "form-control form-control-sm m-0" })
                                </div>
                            </div>
                        }
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
        }
    </div>
    <div class="card-footer rounded-bottom bg-white border-top-0 m-0 p-0">
    </div>
</div>       

@section scripts {
}